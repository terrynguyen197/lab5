#include <stdio.h>
#include <stdlib.h>

int main() {
    int rows1, cols1, rows2, cols2, i, j, k;
    printf("Enter the number of rows for matrix 1: ");
    if (scanf("%d", &rows1) != 1) {
        printf("Invalid input. Expected an integer.\n");
        return 1;
    }
    printf("Enter the number of columns for matrix 1: ");
    if (scanf("%d", &cols1) != 1) {
        printf("Invalid input. Expected an integer.\n");
        return 1;
    }
    printf("Enter the number of rows for matrix 2: ");
    if (scanf("%d", &rows2) != 1) {
        printf("Invalid input. Expected an integer.\n");
        return 1;
    }
    printf("Enter the number of columns for matrix 2: ");
    if (scanf("%d", &cols2) != 1) {
        printf("Invalid input. Expected an integer.\n");
        return 1;
    }
    if (cols1 != rows2) {
        printf("Error: the number of columns in matrix 1 must be equal to the number of rows in matrix 2.\n");
        return 1;
    }

    int matrix1[rows1][cols1], matrix2[rows2][cols2], result[rows1][cols2];

    printf("Enter elements of matrix 1:\n");
    for (i = 0; i < rows1; i++) {
        for (j = 0; j < cols1; j++) {
            if (scanf("%d", &matrix1[i][j]) != 1) {
                printf("Invalid input. Expected an integer.\n");
                return 1;
            }
        }
    }

    printf("Enter elements of matrix 2:\n");
    for (i = 0; i < rows2; i++) {
        for (j = 0; j < cols2; j++) {
            if (scanf("%d", &matrix2[i][j]) != 1) {
                printf("Invalid input. Expected an integer.\n");
                return 1;
            }
        }
    }

    for (i = 0; i < rows1; i++) {
        for (j = 0; j < cols2; j++) {
            result[i][j] = 0;
            for (k = 0; k < cols1; k++) {
                result[i][j] += matrix1[i][k] * matrix2[k][j];
            }
        }
    }

    printf("Result of matrix multiplication:\n");
    for (i = 0; i < rows1; i++) {
        for (j = 0; j < cols2; j++) {
            printf("%d ", result[i][j]);
        }
        printf("\n");
    }

    return 0;
}
